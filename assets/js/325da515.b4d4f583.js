"use strict";(self.webpackChunkecommerce=self.webpackChunkecommerce||[]).push([[1367],{3905:function(t,e,n){n.d(e,{Zo:function(){return d},kt:function(){return m}});var a=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function l(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},o=Object.keys(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(a=0;a<o.length;a++)n=o[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var s=a.createContext({}),u=function(t){var e=a.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},d=function(t){var e=u(t.components);return a.createElement(s.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},p=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,o=t.originalType,s=t.parentName,d=l(t,["components","mdxType","originalType","parentName"]),p=u(n),m=r,h=p["".concat(s,".").concat(m)]||p[m]||c[m]||o;return n?a.createElement(h,i(i({ref:e},d),{},{components:n})):a.createElement(h,i({ref:e},d))}));function m(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var o=n.length,i=new Array(o);i[0]=p;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:r,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},3436:function(t,e,n){n.r(e),n.d(e,{assets:function(){return s},contentTitle:function(){return i},default:function(){return c},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return u}});var a=n(3117),r=(n(7294),n(3905));const o={sidebar_position:2},i="Advanced Pay Button Integration",l={unversionedId:"advancedpaybutton",id:"advancedpaybutton",title:"Advanced Pay Button Integration",description:"Creating a custom pay button allows you to have full control over what information is passed to the Handpoint gateway. You can leverage any of the hosted integration fields as part of the pay button integration.",source:"@site/paybutton/advancedpaybutton.md",sourceDirName:".",slug:"/advancedpaybutton",permalink:"/paybutton/advancedpaybutton",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Basic Pay Button Integration",permalink:"/paybutton/basicpaybutton"}},s={},u=[{value:"Pre-Requisites",id:"pre-requisites",level:2},{value:"Gateway Request",id:"gateway-request",level:2},{value:"Request Fields",id:"request-fields",level:2},{value:"Sample Code (Request)",id:"sample-code-request",level:2}],d={toc:u};function c(t){let{components:e,...n}=t;return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"advanced-pay-button-integration"},"Advanced Pay Button Integration"),(0,r.kt)("p",null,"Creating a custom pay button allows you to have full control over what information is passed to the Handpoint gateway. You can leverage any of the ",(0,r.kt)("a",{parentName:"p",href:"/docs/transactiontypes#transactionRequest"},"hosted integration fields")," as part of the pay button integration."),(0,r.kt)("h2",{id:"pre-requisites"},"Pre-Requisites"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Name"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Merchant Account ID"),(0,r.kt)("td",{parentName:"tr",align:null},"Your unique Merchant Account ID. You should have received these details when your account was set up.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Hosted Integration URL"),(0,r.kt)("td",{parentName:"tr",align:null},"Your unique URL to use the Hosted Integration.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Signature"),(0,r.kt)("td",{parentName:"tr",align:null},"Hash used to sign the transaction request. See the ",(0,r.kt)("a",{parentName:"td",href:"/docs/samplecode#signatureCalculation"},"signature calculation")," section for information on how to create the hash.")))),(0,r.kt)("h2",{id:"gateway-request"},"Gateway Request"),(0,r.kt)("p",null,"To create the button the details should be URL encoded Name=Value fields separated by \u2018&\u2019 characters (refer to RFC 1738 and the application/x-wwwform- urlencoded media type)."),(0,r.kt)("p",null,"This is then base64 encoded with all padding characters (=) stripped and the following characters +, / replaced with \u2013 and _ respectively."),(0,r.kt)("p",null,"This string is then appended to the gateway URL via a GET parameter called fields to give the final link replacing the {base 64 encoded string} above."),(0,r.kt)("h2",{id:"request-fields"},"Request Fields"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Field"),(0,r.kt)("th",{parentName:"tr",align:null},"Mandatory"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"merchantID"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"badge badge--primary"},"Yes")),(0,r.kt)("td",{parentName:"tr",align:null},"The six-digit id provided to you during set-up, e.g. ",(0,r.kt)("inlineCode",{parentName:"td"},"123456")," For testing, please use \u2018TEST\u2019")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"amount"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"badge badge--primary"},"Yes")),(0,r.kt)("td",{parentName:"tr",align:null},"The amount of the transaction in minor currency. For the UK this is in pence, e.g. \xa310.99 is sent as 1099. Numeric values only \u2013 no decimal points or currency symbols.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"action"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"badge badge--primary"},"Yes")),(0,r.kt)("td",{parentName:"tr",align:null},"The action of the transaction. Values are: ",(0,r.kt)("a",{parentName:"td",href:"/docs/transactiontypes#sale"},"SALE"),", ",(0,r.kt)("a",{parentName:"td",href:"/docs/transactiontypes#verify"},"VERIFY")," and ",(0,r.kt)("a",{parentName:"td",href:"/docs/transactiontypes#preauth"},"PREAUTH"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"type"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"badge badge--primary"},"Yes")),(0,r.kt)("td",{parentName:"tr",align:null},"The type of transaction. Passed as a single digit. Possible values are: ",(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"1")," \u2013 E-commerce (ECOM)",(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"2")," - Mail Order/Telephone Order (MOTO)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"redirectURL"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"badge badge--primary"},"Yes")),(0,r.kt)("td",{parentName:"tr",align:null},"The URL to which the customer will be redirected after the transaction with the transaction result sent via POST. We recommend the integration also contain a ",(0,r.kt)("strong",{parentName:"td"},"callbackURL")," to ensure the transaction details are sent to the website in case the cardholder\u2019s browser fails to redirect them.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"countrycode"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"badge badge--primary"},"Yes")),(0,r.kt)("td",{parentName:"tr",align:null},"Merchant's Location. Valid ISO-3166 alpha or numeric code, e.g. 826 for U.K.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"currencyCode"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"badge badge--primary"},"Yes")),(0,r.kt)("td",{parentName:"tr",align:null},"Transaction Currency. Valid ISO-3166 alpha or numeric code, e.g. 826 for U.K.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"signature"),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("span",{class:"badge badge--primary"},"Yes")),(0,r.kt)("td",{parentName:"tr",align:null},"A hashed string of the request containing the signature key unique to the merchant ID. More details on message signing can be found in our annex ",(0,r.kt)("a",{parentName:"td",href:"/docs/samplecode#signatureCalculation"},"Signature Calculation"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"redirectURLFail"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"The URL to which the customer will be redirected and the transaction result will be POSTed if the transaction fails.If left blank, the ",(0,r.kt)("strong",{parentName:"td"},"redirectURL")," will be used.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"formAmountEditable"),(0,r.kt)("td",{parentName:"tr",align:null},"No"),(0,r.kt)("td",{parentName:"tr",align:null},"Accepts the following value: ",(0,r.kt)("br",null)," \u2018",(0,r.kt)("strong",{parentName:"td"},"Y"),"\u2019 \u2013 Allows the cardholder to enter the amount to pay in the hosted form and is useful for donations. ",(0,r.kt)("br",null)," Note: Passing \u2018",(0,r.kt)("strong",{parentName:"td"},"N"),"\u2019, or null to this field causes the amount in the hosted form to act as default, i.e. A static value the user can\u2019t change.")))),(0,r.kt)("h2",{id:"sample-code-request"},"Sample Code (Request)"),(0,r.kt)("p",null,"The following is an example test request built in PHP."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\n//Gateway URL\n$url = 'https://commerce-api.handpoint.com/button/';\n\n//Merchant signature key. It will be provided by the Handpoint support team\n$sigKey = '3obzOxdqw6e1u';\n\n//Request information\n$req = array(\n    'merchantID' => '155928', //merchantID will be provided by the Handpoint support team\n    'amount' => 1099, //Either major currency units includes a single decimal point such as \u201910.99'. \n                      //Minor currency units contains no decimal points such as \u20181099\n    'action' => 'SALE', //action could be SALE, VERIFY or PREAUTH \n    'type' => 1, //1 \u2013> E-commerce (ECOM), 2 \u2013> Mail Order/Telephone Order (MOTO)\n    'redirectURL' => 'https://checkout.handpoint.io/', //The payment form will redirect the Customer\u2019s browser to this URL after the transaction has been completed.\n    'countryCode' => 826, //ISO 3-letter country code. 826 -> United Kingdom\n    'currencyCode' => 826 //ISO 3-letter currency code. 826 -> GBP\n);\n\n$req['signature'] = createSignature($req, $sigKey);\n$poststring       = http_build_query($req, '', '&');\n$base64request    = base64_encode($poststring);\n\necho \"<form action=\\\"{$url}?fields={$base64request}\\\" method=\\\"post\\\" id=\\\"custom\\\">\";\n\n//Button to start the payment\necho '<input type=\"submit\" value=\"Pay Now\">\n</form>';\n\n//Function that generates the signature using the request information and the merchant signature key\nfunction createSignature(array $data, $key){\n    \n    // Sort by field name\n    ksort($data);\n    // Create the URL encoded signature string\n    $ret = http_build_query($data, '', '&');\n    // Normalise all line endings (CRNL|NLCR|NL|CR) to just NL (%0A) \n    $ret = str_replace(array(\n        '%0D%0A',\n        '%0A%0D',\n        '%0D'\n    ), '%0A', $ret);\n    \n    // Hash the signature string and the key together\n    return hash('SHA512', $ret . $key);\n}\n?>\n")))}c.isMDXComponent=!0}}]);